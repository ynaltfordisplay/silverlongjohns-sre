[defaults]
# (boolean) By default, Ansible will issue a warning when received from a task action (module or action plugin).
# These warnings can be silenced by adjusting this setting to False.
action_warnings=True

# (boolean) Sets the default value for the any_errors_fatal keyword, if True, Task failures will be considered fatal errors.
any_errors_fatal=False

# (boolean) This controls whether an Ansible playbook should prompt for a login password. If using SSH keys for authentication, you probably do not need to change this setting.
ask_pass=False

# (boolean) This controls whether an Ansible playbook should prompt for a vault password.
ask_vault_pass=False

# (boolean) Toggles debug output in Ansible. This is *very* verbose and can hinder multiprocessing. Debug output can also include secret information despite no_log settings being enabled, which means debug mode should not be used in production.
debug=False

# (string) This indicates the command to use to spawn a shell under, which is required for Ansible's execution needs on a target. Users may need to change this in rare instances when shell usage is constrained, but in most cases, it may be left as is.
executable=/bin/sh

# (boolean) This option controls if notified handlers run on a host even if a failure occurs on that host.
# When false, the handlers will not run if a failure has occurred on a host.
# This can also be set per play or on the command line. See Handlers and Failure for more details.
force_handlers=False

# (integer) Maximum number of forks Ansible will use to execute tasks on target hosts.
forks=5

# (pathlist) Comma-separated list of Ansible inventory sources
inventory=inventory.yml

# (string) Compression scheme to use when transferring Python modules to the target.
module_compression=ZIP_DEFLATED

# (string) Module to use with the ``ansible`` AdHoc command, if none is specified via ``-m``.
module_name=command

# (boolean) Toggle Ansible's display and logging of task details, mainly used to avoid security disclosures.
no_log=False

# (boolean) Toggle Ansible logging to syslog on the target when it executes tasks. On Windows hosts, this will disable a newer style PowerShell modules from writing to the event log.
no_target_syslog=False

# (string) Set the main callback used to display Ansible output. You can only have one at a time.
# You can have many other callbacks, but just one can be in charge of stdout.
# See :ref:`callback_plugins` for a list of available options.
stdout_callback=default
callback_pretty_results=true
callback_result_format=yaml

# (integer) This is the default timeout for connection plugins to use.
timeout=10

# (list) When to include tracebacks in extended error messages
display_traceback=never

# (string) for the cases in which Ansible needs to return a file within an editor, this chooses the application to use.
editor=vi

# (boolean) Set this to "False" if you want to avoid host key checking by the underlying connection plugin Ansible uses to connect to the host.
# Please read the documentation of the specific connection plugin used for details.
host_key_checking=True

# (string) Path to the Python interpreter to be used for module execution on remote targets, or an automatic discovery mode. Supported discovery modes are ``auto`` (the default), ``auto_silent``, ``auto_legacy``, and ``auto_legacy_silent``. All discovery modes match against an ordered list of well-known Python interpreter locations. The fallback behavior will issue a warning that the interpreter should be set explicitly (since interpreters installed later may change which one is used). This warning behavior can be disabled by setting ``auto_silent``. The ``auto_legacy`` modes are deprecated and behave the same as their respective ``auto`` modes. They exist for backward-compatibility with older Ansible releases that always defaulted to ``/usr/bin/python3``, which will use that interpreter if present.
interpreter_python=auto_silent

# (string) for the cases in which Ansible needs to return output in a pageable fashion, this chooses the application to use.
pager=less

# (boolean) Allows disabling of warnings related to potential issues on the system running Ansible itself (not on the managed hosts).
# These may include warnings about third-party packages or other conditions that should be resolved if possible.
system_warnings=True

# (boolean) Toggles the use of persistence for connections.
use_persistent_connections=True

# (list) Accept list for variable plugins that require it.
vars_plugins_enabled=host_group_vars

# (list) Allows to change the group variable precedence merge order.
precedence=all_inventory, groups_inventory, all_plugins_inventory, all_plugins_play, groups_plugins_inventory, groups_plugins_play

# (list) Check all of these extensions when looking for 'variable' files which should be YAML or JSON or vaulted versions of these.
# This affects vars_files, include_vars, inventory and vars plugins among others.
yaml_valid_extensions=.yml, .yaml, .json


[privilege_escalation]
# (boolean) Display an agnostic become prompt instead of displaying a prompt containing the command line supplied become method.
agnostic_become_prompt=True

# (boolean) Toggles the use of privilege escalation, allowing you to 'become' another user after login.
become=False

# (string) Privilege escalation method to use when `become` is enabled.
become_method=sudo

# (string) The user your login/remote user 'becomes' when using privilege escalation, most systems will use 'root' when no user is specified.
become_user=root


[persistent_connection]
# (path) Specify where to look for the ansible-connection script. This location will be checked before searching $PATH.
# If null, ansible will start with the same directory as the ansible script.
# ansible_connection_path=

# (int) This controls the amount of time to wait for a response from a remote device before timing out a persistent connection.
command_timeout=30

# (integer) This controls the retry timeout for persistent connection to connect to the local domain socket.
connect_retry_timeout=15

# (integer) This controls how long the persistent connection will remain idle before it is destroyed.
connect_timeout=30


[connection]
# (boolean) This is a global option, each connection plugin can override either by having more specific options or not supporting pipelining at all.
# Pipelining, if supported by the connection plugin, reduces the number of network operations required to execute a module on the remote server, by executing many Ansible modules without actual file transfer.
# It can result in a very significant performance improvement when enabled.
# However this conflicts with privilege escalation (become). For example, when using 'sudo:' operations you must first disable 'requiretty' in /etc/sudoers on all managed hosts, which is why it is disabled by default.
# This setting will be disabled if ``ANSIBLE_KEEP_REMOTE_FILES`` is enabled.
pipelining=False

# (string) Manage an SSH Agent via Ansible. A configuration of ``none`` will not interact with an agent, ``auto`` will start and destroy an agent via ``ssh-agent`` binary during the run, and a path to an SSH_AUTH_SOCK will allow interaction with a pre-existing agent.
ssh_agent=none

# (str) When ``SSH_AGENT`` is ``auto``, the path or name of the ssh agent executable to start.
ssh_agent_executable=ssh-agent


[colors]
# (string) Defines the color to use on 'Changed' task status.
changed=yellow

# (string) Defines the default color to use for ansible-console.
console_prompt=white

# (string) Defines the color to use when emitting debug messages.
debug=dark gray

# (string) Defines the color to use when emitting deprecation messages.
deprecate=purple

# (string) Defines the color to use when showing added lines in diffs.
diff_add=green

# (string) Defines the color to use when showing diffs.
diff_lines=cyan

# (string) Defines the color to use when showing removed lines in diffs.
diff_remove=red

# (string) Defines the color to use when emitting a constant in the ansible-doc output.
doc_constant=dark gray

# (string) Defines the color to use when emitting a deprecated value in the ansible-doc output.
doc_deprecated=magenta

# (string) Defines the color to use when emitting a link in the ansible-doc output.
doc_link=cyan

# (string) Defines the color to use when emitting a module name in the ansible-doc output.
doc_module=yellow

# (string) Defines the color to use when emitting a plugin name in the ansible-doc output.
doc_plugin=yellow

# (string) Defines the color to use when emitting cross-reference in the ansible-doc output.
doc_reference=magenta

# (string) Defines the color to use when emitting error messages.
error=red

# (string) Defines the color to use for highlighting.
highlight=white

# (string) Defines the color to use when showing 'Included' task status.
included=cyan

# (string) Defines the color to use when showing 'OK' task status.
ok=green

# (string) Defines the color to use when showing 'Skipped' task status.
skip=cyan

# (string) Defines the color to use on 'Unreachable' status.
unreachable=bright red

# (string) Defines the color to use when emitting verbose messages. In other words, those that show with '-v's.
verbose=blue

# (string) Defines the color to use when emitting warning messages.
warn=bright purple


[diff]
# (bool) Configuration toggle to tell modules to show differences when in 'changed' status, equivalent to ``--diff``.
always=True

# (integer) Number of lines of context to show when displaying the differences between files.
context=3


[inventory]
# (string) This setting changes the behaviour of mismatched host patterns, it allows you to force a fatal error, a warning or just ignore it.
host_pattern_mismatch=warning

# (boolean) If 'true', it is a fatal error when any given inventory source cannot be successfully parsed by any available inventory plugin; otherwise, this situation only attracts a warning.
any_unparsed_is_failed=True

# (list) List of enabled inventory plugins, it also determines the order in which they are used.
enable_plugins=host_list, script, auto, yaml, ini, toml

# (bool) Controls if ansible-inventory will accurately reflect Ansible's view into inventory or its optimized for exporting.
export=False

# (list) List of extensions to ignore when using a directory as an inventory source.
ignore_extensions=.pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, .rst, .orig, .cfg, .retry
